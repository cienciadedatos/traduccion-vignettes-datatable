#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 11:41-0300\n"
"PO-Revision-Date: 2024-10-04 16:53-0300\n"
"Last-Translator: Nombre Apellido <direccion@ejemplo.com>\n"
"Language-Team: es\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.13.3\n"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"This vignette discusses the default usage of reshaping functions `melt` "
"(wide to long) and `dcast` (long to wide) for *data.tables* as well as the "
"**new extended functionalities** of melting and casting on *multiple "
"columns* available from `v1.9.6`."
msgstr "Esta viñeta analiza el uso predeterminado de las funciones de remodelación `melt` (de ancho a largo) y `dcast` (de largo a ancho) para *data.tables*, así como las **nuevas funcionalidades extendidas** de fusión y conversión en *múltiples columnas* disponibles a partir de `v1.9.6`."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "Data"
msgstr "Datos"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "We will load the data sets directly within sections."
msgstr "Cargaremos los conjuntos de datos directamente dentro de las secciones."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "Introduction"
msgstr "Introducción"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"The `melt` and `dcast` functions for `data.table`s are for reshaping wide-to-"
"long and long-to-wide, respectively; the implementations are specifically "
"designed with large in-memory data (e.g. 10Gb) in mind."
msgstr "Las funciones `melt` y `dcast` para `data.table`s sirven para cambiar la forma de ancho a largo y de largo a ancho, respectivamente; las implementaciones están diseñadas específicamente teniendo en mente grandes datos en memoria (por ejemplo, 10 Gb)."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "In this vignette, we will"
msgstr "En esta viñeta, vamos a"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====1. First briefly look at the default `melt`ing and `dcast`ing of `data."
"table`s to convert them from *wide* to *long* format and _vice versa_====="
msgstr "=====1. Primero, observe brevemente la conversión predeterminada de ``melt`` y ``dcast`` de ``data.table`` para convertirlas de formato *ancho* a *largo* y _viceversa_====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====2. Look at scenarios where the current functionalities become "
"cumbersome and inefficient====="
msgstr "=====2. Analice los escenarios en los que las funcionalidades actuales se vuelven engorrosas e ineficientes====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====3. Finally look at the new improvements to both `melt` and `dcast` "
"methods for `data.table`s to handle multiple columns simultaneously.====="
msgstr "=====3. Por último, observe las nuevas mejoras en los métodos `melt` y `dcast` para que `data.table` pueda manejar múltiples columnas simultáneamente.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"The extended functionalities are in line with `data.table`'s philosophy of "
"performing operations efficiently and in a straightforward manner."
msgstr "Las funcionalidades extendidas están en línea con la filosofía de `data.table` de realizar operaciones de manera eficiente y sencilla."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "1. Default functionality"
msgstr "1. Funcionalidad predeterminada"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "a) `melt`ing `data.table`s (wide to long)"
msgstr "a) ``fusión`` de `data.table`` (de ancho a largo)"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "Suppose we have a `data.table` (artificial data) as shown below:"
msgstr "Supongamos que tenemos una `data.table` (datos artificiales) como se muestra a continuación:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid ""
"- Convert `DT` to *long* form where each `dob` is a separate observation."
msgstr "- Convertir 'DT' a formato *largo* donde cada 'dob' es una observación separada."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"We could accomplish this using `melt()` by specifying `id.vars` and `measure."
"vars` arguments as follows:"
msgstr "Podríamos lograr esto usando `melt()` especificando los argumentos `id.vars` y `measure.vars` de la siguiente manera:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* `measure.vars` specify the set of columns we would like to collapse "
"(or combine) together.====="
msgstr "=====* `measure.vars` especifica el conjunto de columnas que nos gustaría contraer (o combinar) juntas.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "=====* We can also specify column *positions* instead of *names*.====="
msgstr "=====* También podemos especificar *posiciones* de columnas en lugar de *nombres*.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* By default, `variable` column is of type `factor`. Set `variable."
"factor` argument to `FALSE` if you'd like to return a *`character`* vector "
"instead.====="
msgstr "=====* De manera predeterminada, la columna `variable` es del tipo `factor`. Establezca el argumento `variable.factor` en `FALSO` si desea devolver un vector de *`carácter`* en su lugar.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* By default, the molten columns are automatically named `variable` and "
"`value`.====="
msgstr "=====* De manera predeterminada, las columnas fundidas se denominan automáticamente `variable` y `valor`.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "=====* `melt` preserves column attributes in result.====="
msgstr "=====* `melt` conserva los atributos de la columna en el resultado.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid ""
"- Name the `variable` and `value` columns to `child` and `dob` respectively"
msgstr "- Nombra las columnas `variable` y `valor` como `hijo` y `dob` respectivamente"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* By default, when one of `id.vars` or `measure.vars` is missing, the "
"rest of the columns are *automatically assigned* to the missing argument."
"====="
msgstr "=====* De manera predeterminada, cuando falta una de las `id.vars` o `measure.vars`, el resto de las columnas se *asigna automáticamente* al argumento faltante.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* When neither `id.vars` nor `measure.vars` are specified, as mentioned "
"under `?melt`, all *non*-`numeric`, `integer`, `logical` columns will be "
"assigned to `id.vars`.====="
msgstr "=====* Cuando no se especifican ni `id.vars` ni `measure.vars`, como se menciona en `?melt`, todas las columnas *no* `numéricas`, `enteras`, `lógicas` se asignarán a `id.vars`.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "b) `dcast`ing `data.table`s (long to wide)"
msgstr "b) `dcast` de `data.table` (de largo a ancho)"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"In the previous section, we saw how to get from wide form to long form. "
"Let's see the reverse operation in this section."
msgstr "En la sección anterior, vimos cómo pasar del formato ancho al formato largo. Veamos la operación inversa en esta sección."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "- How can we get back to the original data table `DT` from `DT.m1`?"
msgstr "- ¿Cómo podemos volver a la tabla de datos original `DT` desde `DT.m1`?"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"That is, we'd like to collect all *child* observations corresponding to each "
"`family_id, age_mother` together under the same row. We can accomplish it "
"using `dcast` as follows:"
msgstr "Es decir, nos gustaría recopilar todas las observaciones de *child* correspondientes a cada `family_id, age_mother` juntas en la misma fila. Podemos lograrlo usando `dcast` de la siguiente manera:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* `dcast` uses *formula* interface. The variables on the *LHS* of "
"formula represents the *id* vars and *RHS* the *measure* vars.====="
msgstr "=====* `dcast` utiliza la interfaz *formula*. Las variables del *lado izquierdo* de la fórmula representan las variables *id* y del *lado derecho* las variables *measure*.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* `value.var` denotes the column to be filled in with while casting to "
"wide format.====="
msgstr "=====* `value.var` indica la columna que se debe completar al convertir a formato ancho.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* `dcast` also tries to preserve attributes in result wherever possible."
"====="
msgstr "=====* `dcast` también intenta preservar los atributos en el resultado siempre que sea posible.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid ""
"- Starting from `DT.m1`, how can we get the number of children in each "
"family?"
msgstr "- A partir de `DT.m1`, ¿cómo podemos obtener el número de hijos en cada familia?"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"You can also pass a function to aggregate by in `dcast` with the argument "
"`fun.aggregate`. This is particularly essential when the formula provided "
"does not identify single observation for each cell."
msgstr "También puede pasar una función para agregar en `dcast` con el argumento `fun.agregate`. Esto es particularmente esencial cuando la fórmula proporcionada no identifica una sola observación para cada celda."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "Check `?dcast` for other useful arguments and additional examples."
msgstr "Consulte `?dcast` para obtener otros argumentos útiles y ejemplos adicionales."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "2. Limitations in current `melt/dcast` approaches"
msgstr "2. Limitaciones de los métodos actuales de «fusión/desintegración»"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"So far we've seen features of `melt` and `dcast` that are implemented "
"efficiently for `data.table`s, using internal `data.table` machinery (*fast "
"radix ordering*, *binary search* etc.)."
msgstr "Hasta ahora hemos visto características de `melt` y `dcast` que se implementan de manera eficiente para `data.table`s, utilizando la maquinaria interna de `data.table` (*ordenamiento rápido de radix*, *búsqueda binaria*, etc.)."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"However, there are situations we might run into where the desired operation "
"is not expressed in a straightforward manner. For example, consider the "
"`data.table` shown below:"
msgstr "Sin embargo, existen situaciones en las que podemos encontrarnos con la operación deseada que no se expresa de manera sencilla. Por ejemplo, considere la tabla `data.table` que se muestra a continuación:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"And you'd like to combine (`melt`) all the `dob` columns together, and "
"`gender` columns together. Using the current functionality, we can do "
"something like this:"
msgstr "Y desea combinar (`melt`) todas las columnas `dob` y `gender`. Con la funcionalidad actual, podemos hacer algo como esto:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "Issues"
msgstr "Asuntos"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====1. What we wanted to do was to combine all the `dob` and `gender` type "
"columns together respectively. Instead, we are combining *everything* "
"together, and then splitting them again. I think it's easy to see that it's "
"quite roundabout (and inefficient).====="
msgstr "=====1. Lo que queríamos hacer era combinar todas las columnas de tipo `dob` y `gender` respectivamente. En lugar de eso, estamos combinando *todo* y luego dividiendo todo. Creo que es fácil ver que es bastante indirecto (e ineficiente).====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====2. The columns to `melt` may be of different types, as in this case "
"(`character` and `integer` types). By `melt`ing them all together, the "
"columns will be coerced in result, as explained by the warning message above "
"and shown from output of `str(DT.c1)`, where `gender` has been converted to "
"*`character`* type.====="
msgstr "=====2. Las columnas que se van a `melt` pueden ser de tipos diferentes, como en este caso (tipos `character` y `integer`). Al `melt` todas juntas, las columnas se convertirán en el resultado, como se explica en el mensaje de advertencia anterior y se muestra en la salida de `str(DT.c1)`, donde `gender` se ha convertido al tipo *`character`*.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====3. We are generating an additional column by splitting the `variable` "
"column into two columns, whose purpose is quite cryptic. We do it because we "
"need it for *casting* in the next step.====="
msgstr "=====3. Estamos generando una columna adicional dividiendo la columna `variable` en dos columnas, cuyo propósito es bastante críptico. Lo hacemos porque lo necesitamos para la *conversión* en el siguiente paso.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====4. Finally, we cast the data set. But the issue is it's a much more "
"computationally involved operation than *melt*. Specifically, it requires "
"computing the order of the variables in formula, and that's costly.====="
msgstr "=====4. Finalmente, convertimos el conjunto de datos. Pero el problema es que es una operación que requiere mucho más trabajo computacional que *melt*. En concreto, requiere calcular el orden de las variables en la fórmula, y eso es costoso.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"In fact, `stats::reshape` is capable of performing this operation in a very "
"straightforward manner. It is an extremely useful and often underrated "
"function. You should definitely give it a try!"
msgstr "De hecho, `stats::reshape` es capaz de realizar esta operación de una manera muy sencilla. Es una función extremadamente útil y a menudo subestimada. ¡Definitivamente deberías probarla!"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "3. Enhanced (new) functionality"
msgstr "3. Funcionalidad mejorada (nueva)"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "a) Enhanced `melt`"
msgstr "a) Fusión mejorada"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Since we'd like for `data.table`s to perform this operation straightforward "
"and efficient using the same interface, we went ahead and implemented an "
"*additional functionality*, where we can `melt` to multiple columns "
"*simultaneously*."
msgstr "Como nos gustaría que `data.table` realice esta operación de manera sencilla y eficiente utilizando la misma interfaz, seguimos adelante e implementamos una *funcionalidad adicional*, donde podemos `fusionar` varias columnas *simultáneamente*."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "- `melt` multiple columns simultaneously"
msgstr "- `fundir` múltiples columnas simultáneamente"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"The idea is quite simple. We pass a list of columns to `measure.vars`, where "
"each element of the list contains the columns that should be combined "
"together."
msgstr "La idea es bastante sencilla. Pasamos una lista de columnas a `measure.vars`, donde cada elemento de la lista contiene las columnas que deben combinarse."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "=====* We can remove the `variable` column if necessary.====="
msgstr "=====* Podemos eliminar la columna `variable` si es necesario.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* The functionality is implemented entirely in C, and is therefore both "
"*fast* and *memory efficient* in addition to being *straightforward*.====="
msgstr "=====* La funcionalidad está implementada completamente en C y, por lo tanto, es *rápida* y *eficiente en el uso de la memoria*, además de ser *sencilla*.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "- Using `patterns()`"
msgstr "- Usando `patrones()`"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Usually in these problems, the columns we'd like to melt can be "
"distinguished by a common pattern. We can use the function `patterns()`, "
"implemented for convenience, to provide regular expressions for the columns "
"to be combined together. The above operation can be rewritten as:"
msgstr "Por lo general, en estos problemas, las columnas que queremos fundir se pueden distinguir por un patrón común. Podemos utilizar la función `patterns()`, implementada por conveniencia, para proporcionar expresiones regulares para las columnas que se combinarán. La operación anterior se puede reescribir como:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "- Using `measure()` to specify `measure.vars` via separator or pattern"
msgstr "- Usar `measure()` para especificar `measure.vars` a través de un separador o patrón"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"If, as in the data above, the input columns to melt have regular names, then "
"we can use `measure`, which allows specifying the columns to melt via a "
"separator or a regex. For example consider the iris data,"
msgstr "Si, como en los datos anteriores, las columnas de entrada que se van a fundir tienen nombres regulares, entonces podemos usar `measure`, que permite especificar las columnas que se van a fundir mediante un separador o una expresión regular. Por ejemplo, considere los datos del iris:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"The iris data has four numeric columns with a regular structure: first the "
"flower part, then a period, then the measurement dimension. To specify that "
"we want to melt those four columns, we can use `measure` with `sep=\".\"` "
"which means to use `strsplit` on all column names; the columns which result "
"in the maximum number of groups after splitting will be used as `measure."
"vars`:"
msgstr "Los datos del iris tienen cuatro columnas numéricas con una estructura regular: primero la parte de la flor, luego un punto y luego la dimensión de la medida. Para especificar que queremos fusionar esas cuatro columnas, podemos usar `measure` con `sep=\".\"`, lo que significa usar `strsplit` en todos los nombres de columna; las columnas que resulten en la cantidad máxima de grupos después de la división se usarán como `measure.vars`:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"The first two arguments to `measure` in the code above (`part` and `dim`) "
"are used to name the output columns; the number of arguments must equal the "
"max number of groups after splitting with `sep`."
msgstr "Los primeros dos argumentos de `measure` en el código anterior (`part` y `dim`) se utilizan para nombrar las columnas de salida; la cantidad de argumentos debe ser igual a la cantidad máxima de grupos después de dividir con `sep`."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"If we want two value columns, one for each part, we can use the special "
"`value.name` keyword, which means to output a value column for each unique "
"name found in that group:"
msgstr "Si queremos dos columnas de valores, una para cada parte, podemos usar la palabra clave especial `value.name`, lo que significa generar una columna de valores para cada nombre único encontrado en ese grupo:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Using the code above we get one value column per flower part. If we instead "
"want a value column for each measurement dimension, we can do:"
msgstr "Con el código anterior obtenemos una columna de valores por cada parte de la flor. Si, en cambio, queremos una columna de valores para cada dimensión de medida, podemos hacer lo siguiente:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Going back to the example of the data with families and children, we can see "
"a more complex usage of `measure`, involving a function which is used to "
"convert the `child` string values to integers:"
msgstr "Volviendo al ejemplo de los datos con familias e hijos, podemos ver un uso más complejo de `measure`, que involucra una función que se utiliza para convertir los valores de la cadena `child` en números enteros:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"In the code above we used `sep=\"_child\"` which results in melting only the "
"columns which contain that string (six column names split into two groups "
"each). The `child=as.integer` argument means the second group will result in "
"an output column named `child` with values defined by plugging the character "
"strings from that group into the function `as.integer`."
msgstr "En el código anterior, usamos `sep=\"_child\"`, lo que da como resultado la fusión de solo las columnas que contienen esa cadena (seis nombres de columnas divididos en dos grupos cada uno). El argumento `child=as.integer` significa que el segundo grupo dará como resultado una columna de salida llamada `child` con valores definidos al insertar las cadenas de caracteres de ese grupo en la función `as.integer`."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Finally we consider an example (borrowed from tidyr package) where we need "
"to define the groups using a regular expression rather than a separator."
msgstr "Finalmente, consideramos un ejemplo (tomado del paquete tidyr) donde necesitamos definir los grupos usando una expresión regular en lugar de un separador."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"When using the `pattern` argument, it must be a Perl-compatible regular "
"expression containing the same number of capture groups (parenthesized sub-"
"expressions) as the number other arguments (group names). The code below "
"shows how to use a more complex regex with five groups, two numeric output "
"columns, and an anonymous type conversion function,"
msgstr "Al utilizar el argumento `patrón`, debe ser una expresión regular compatible con Perl que contenga la misma cantidad de grupos de captura (subexpresiones entre paréntesis) que la cantidad de otros argumentos (nombres de grupos). El código siguiente muestra cómo utilizar una expresión regular más compleja con cinco grupos, dos columnas de salida numérica y una función de conversión de tipo anónima."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "b) Enhanced `dcast`"
msgstr "b) `dcast` mejorado"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"Okay great! We can now melt into multiple columns simultaneously. Now given "
"the data set `DT.m2` as shown above, how can we get back to the same format "
"as the original data we started with?"
msgstr "¡Genial! Ahora podemos fusionar varias columnas simultáneamente. Ahora, dado el conjunto de datos `DT.m2` como se muestra arriba, ¿cómo podemos volver al mismo formato que los datos originales con los que comenzamos?"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"If we use the current functionality of `dcast`, then we'd have to cast twice "
"and bind the results together. But that's once again verbose, not "
"straightforward and is also inefficient."
msgstr "Si usamos la funcionalidad actual de `dcast`, entonces tendríamos que realizar la conversión dos veces y vincular los resultados. Pero eso es, una vez más, demasiado verboso, no es sencillo y también es ineficiente."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "- Casting multiple `value.var`s simultaneously"
msgstr "- Conversión de múltiples `value.var` simultáneamente"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"We can now provide **multiple `value.var` columns** to `dcast` for `data."
"table`s directly so that the operations are taken care of internally and "
"efficiently."
msgstr "Ahora podemos proporcionar **múltiples columnas `value.var`** a `dcast` para `data.table` directamente para que las operaciones se realicen de manera interna y eficiente."

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid "=====* Attributes are preserved in result wherever possible.====="
msgstr "=====* Los atributos se conservan en el resultado siempre que sea posible.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"=====* Everything is taken care of internally, and efficiently. In addition "
"to being fast, it is also very memory efficient.====="
msgstr "=====* Todo se gestiona internamente y de manera eficiente. Además de ser rápido, también es muy eficiente en el uso de la memoria.====="

#: es%5Cdatatable-reshape.Rmd.tmp%2Bheading
msgid "Multiple functions to `fun.aggregate`:"
msgstr "Varias funciones para `fun.agregate`:"

#: es%5Cdatatable-reshape.Rmd.tmp%2Bp
msgid ""
"You can also provide *multiple functions* to `fun.aggregate` to `dcast` for "
"*data.tables*. Check the examples in `?dcast` which illustrates this "
"functionality."
msgstr "También puede proporcionar *múltiples funciones* a `fun.agregate` para `dcast` para *data.tables*. Consulte los ejemplos en `?dcast` que ilustran esta funcionalidad."
